###################################################################################
###################################################################################
##############################Practica Parcial 3###################################
###################################################################################
######################Jhonny M. Lora. Jimenez 20076446#############################
###################################################################################
###################################################################################

I. Dada una secuencia de valores, determine las posibles combinaciones para poder
colorear un mapa con 4 colores, los valores corresponden a las ubicaciones de las 
ciudades de un mapa.

II. Dado un listado de nombres en un archivo, desarrolle un indice para buscar dentro
del mismo. Use la tecnica mas efectiva para este caso.

III. Desarrolle un moddulo capaz de determinar los tiempos de corrida para cualquer
clase que se use para ordenar valores.
La solucion esta en el paquete 'isc.jhonnytunes.profiler' y la clase de prueba es
'prueba.Probando3'. Se utilizo como auxiliar 'prueba.InsertionSort'. El objeto que 
representa el algoritmo, debe  implementar la interface Profilable y en el metodo
que se va a override hacer un method forwarding al metodo que se desea hacer el 
profiling. El tiempo es medido en nanosegundos. !0^(-9).

IV. Josephus problem